//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.TeleopInterfaces
{
    [Serializable]
    public class XRPoseMsg : Message
    {
        public const string k_RosMessageName = "teleop_interfaces/XRPose";
        public override string RosMessageName => k_RosMessageName;

        // Custom message to transfer pose data from XR system
        public Geometry.PoseMsg left_controller_pose;
        public Geometry.PoseMsg right_controller_pose;
        public Geometry.PoseMsg hmd_pose;

        public XRPoseMsg()
        {
            this.left_controller_pose = new Geometry.PoseMsg();
            this.right_controller_pose = new Geometry.PoseMsg();
            this.hmd_pose = new Geometry.PoseMsg();
        }

        public XRPoseMsg(Geometry.PoseMsg left_controller_pose, Geometry.PoseMsg right_controller_pose, Geometry.PoseMsg hmd_pose)
        {
            this.left_controller_pose = left_controller_pose;
            this.right_controller_pose = right_controller_pose;
            this.hmd_pose = hmd_pose;
        }

        public static XRPoseMsg Deserialize(MessageDeserializer deserializer) => new XRPoseMsg(deserializer);

        private XRPoseMsg(MessageDeserializer deserializer)
        {
            this.left_controller_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.right_controller_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.hmd_pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.left_controller_pose);
            serializer.Write(this.right_controller_pose);
            serializer.Write(this.hmd_pose);
        }

        public override string ToString()
        {
            return "XRPoseMsg: " +
            "\nleft_controller_pose: " + left_controller_pose.ToString() +
            "\nright_controller_pose: " + right_controller_pose.ToString() +
            "\nhmd_pose: " + hmd_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
