//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.TeleopInterfaces
{
    [Serializable]
    public class GraspReqRequest : Message
    {
        public const string k_RosMessageName = "teleop_interfaces/GraspReq";
        public override string RosMessageName => k_RosMessageName;

        //  Custom service to request grasp poses from a given point cloud
        public Sensor.ImageMsg image;
        public Sensor.ImageMsg depth_image;
        public Sensor.ImageMsg segmentation_map;
        public Sensor.CameraInfoMsg camera_info;

        public GraspReqRequest()
        {
            this.image = new Sensor.ImageMsg();
            this.depth_image = new Sensor.ImageMsg();
            this.segmentation_map = new Sensor.ImageMsg();
            this.camera_info = new Sensor.CameraInfoMsg();
        }

        public GraspReqRequest(Sensor.ImageMsg image, Sensor.ImageMsg depth_image, Sensor.ImageMsg segmentation_map, Sensor.CameraInfoMsg camera_info)
        {
            this.image = image;
            this.depth_image = depth_image;
            this.segmentation_map = segmentation_map;
            this.camera_info = camera_info;
        }

        public static GraspReqRequest Deserialize(MessageDeserializer deserializer) => new GraspReqRequest(deserializer);

        private GraspReqRequest(MessageDeserializer deserializer)
        {
            this.image = Sensor.ImageMsg.Deserialize(deserializer);
            this.depth_image = Sensor.ImageMsg.Deserialize(deserializer);
            this.segmentation_map = Sensor.ImageMsg.Deserialize(deserializer);
            this.camera_info = Sensor.CameraInfoMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.image);
            serializer.Write(this.depth_image);
            serializer.Write(this.segmentation_map);
            serializer.Write(this.camera_info);
        }

        public override string ToString()
        {
            return "GraspReqRequest: " +
            "\nimage: " + image.ToString() +
            "\ndepth_image: " + depth_image.ToString() +
            "\nsegmentation_map: " + segmentation_map.ToString() +
            "\ncamera_info: " + camera_info.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
